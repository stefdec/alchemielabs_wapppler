{"version":3,"sources":["components/download.js"],"names":["dmx","Component","initialData","progress","position","total","percent","lastError","status","message","attributes","timeout","type","Number","default","url","String","filename","methods","abort","this","_abort","download","_download","events","done","Event","error","start","ProgressEvent","init","_loadHandler","bind","_abortHandler","_errorHandler","_timeoutHandler","_progressHandler","_xhr","XMLHttpRequest","addEventListener","destroy","removeEventListener","_url","props","_trigger","_supportsCors","open","responseType","send","a","document","createElement","href","replace","rel","target","dispatchEvent","MouseEvent","xhr","e","event","data","requestAnimationFrame","_reset","set","response","_getFilename","header","getResponseHeader","match","blob","URL","createObjectURL","setTimeout","revokeObjectURL","statusText","loaded","lengthComputable","Math","ceil"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,WAAA,CAEAC,YAAA,CACAC,SAAA,CACAC,SAAA,EACAC,MAAA,EACAC,QAAA,GAGAC,UAAA,CACAC,OAAA,EACAC,QAAA,KAIAC,WAAA,CACAC,QAAA,CACAC,KAAAC,OACAC,QAAA,GAGAC,IAAA,CACAH,KAAAI,OACAF,QAAA,IAGAG,SAAA,CACAL,KAAAI,OACAF,QAAA,KAIAI,QAAA,CACAC,QACAC,KAAAC,QACA,EAEAC,SAAAP,GACAK,KAAAG,UAAAR,EACA,GAGAS,OAAA,CACAC,KAAAC,MACAC,MAAAD,MACAE,MAAAF,MACAvB,SAAA0B,eAGAC,OACAV,KAAAW,aAAAX,KAAAW,aAAAC,KAAAZ,MACAA,KAAAa,cAAAb,KAAAa,cAAAD,KAAAZ,MACAA,KAAAc,cAAAd,KAAAc,cAAAF,KAAAZ,MACAA,KAAAe,gBAAAf,KAAAe,gBAAAH,KAAAZ,MACAA,KAAAgB,iBAAAhB,KAAAgB,iBAAAJ,KAAAZ,MAEAA,KAAAiB,KAAA,IAAAC,eACAlB,KAAAiB,KAAAE,iBAAA,OAAAnB,KAAAW,cACAX,KAAAiB,KAAAE,iBAAA,QAAAnB,KAAAa,eACAb,KAAAiB,KAAAE,iBAAA,QAAAnB,KAAAc,eACAd,KAAAiB,KAAAE,iBAAA,UAAAnB,KAAAe,iBACAf,KAAAiB,KAAAE,iBAAA,WAAAnB,KAAAgB,iBACA,EAEAI,UACApB,KAAAiB,KAAAI,oBAAA,OAAArB,KAAAW,cACAX,KAAAiB,KAAAI,oBAAA,QAAArB,KAAAa,eACAb,KAAAiB,KAAAI,oBAAA,QAAArB,KAAAc,eACAd,KAAAiB,KAAAI,oBAAA,UAAArB,KAAAe,iBACAf,KAAAiB,KAAAI,oBAAA,WAAArB,KAAAgB,kBACAhB,KAAAiB,KAAA,IACA,EAEAhB,SACAD,KAAAiB,KAAAlB,OACA,EAEAI,UAAAR,GAOA,GANAK,KAAAsB,KAAA3B,GAAAK,KAAAuB,MAAA5B,IAEAK,KAAAiB,KAAAlB,QAEAC,KAAAwB,SAAA,SAEAxB,KAAAyB,cAAAzB,KAAAsB,MACAtB,KAAAiB,KAAAS,KAAA,MAAA1B,KAAAsB,MACAtB,KAAAiB,KAAAU,aAAA,OACA3B,KAAAiB,KAAAW,WACA,CACA,MAAAC,EAAAC,SAAAC,cAAA,KACAF,EAAAG,KAAAhC,KAAAsB,KACAO,EAAA3B,SAAAF,KAAAuB,MAAA1B,UAAAG,KAAAsB,KAAAW,QAAA,OAAA,IAAAA,QAAA,OAAA,KAAA,WACAJ,EAAAK,IAAA,WACAL,EAAAM,OAAA,SACAN,EAAAO,cAAA,IAAAC,WAAA,SACA,CACA,EAEAZ,cAAA9B,GACA,IAAA2C,EAAA,IAAApB,eACAoB,EAAAZ,KAAA,OAAA/B,GAAA,GACA,IAAA2C,EAAAV,MAAA,CAAA,MAAAW,GAAA,CACA,OAAAD,EAAAlD,QAAA,KAAAkD,EAAAlD,OAAA,GACA,EAEAoC,SAAAgB,EAAAC,GACAC,uBAAA,KACA1C,KAAAoC,cAAAI,EAAAC,EAAA,GAEA,EAEAE,SACA3C,KAAA4C,IAAA,CACA7D,SAAA,CACAC,SAAA,EACAC,MAAA,EACAC,QAAA,GAEAqB,MAAA,CACAnB,OAAA,EACAC,QAAA,GACAwD,SAAA,OAGA,EAEAC,eACA,MAAAC,EAAA/C,KAAAiB,KAAA+B,kBAAA,uBACAC,EAAAF,GAAAA,EAAAE,MAAA,0CACA,OAAAjD,KAAAuB,MAAA1B,aAAAoD,IAAAA,EAAA,KAAAA,EAAA,GAAAhB,QAAA,QAAA,KAAAjC,KAAAsB,KAAAW,QAAA,OAAA,IAAAA,QAAA,OAAA,KAAA,UACA,EAEAtB,eAIA,GAHAX,KAAA2C,SACA3C,KAAAwB,SAAA,QAEAxB,KAAAiB,KAAA7B,QAAA,KAAAY,KAAAiB,KAAA7B,OAAA,IAAA,CACA,IAAA8D,EAAAlD,KAAAiB,KAAA4B,SACAhB,EAAAC,SAAAC,cAAA,KACAF,EAAAG,KAAAmB,IAAAC,gBAAAF,GACArB,EAAA3B,SAAAF,KAAA8C,eACAjB,EAAAK,IAAA,WAEAmB,YAAA,KAAAF,IAAAG,gBAAAzB,EAAAG,KAAA,GAAA,KACAqB,YAAA,KAAAxB,EAAAO,cAAA,IAAAC,WAAA,SAAA,GAAA,EACA,MACArC,KAAA4C,IAAA,QAAA,CACAxD,OAAAY,KAAAiB,KAAA7B,OACAC,QAAAW,KAAAiB,KAAAsC,aAEAvD,KAAAwB,SAAA,QAEA,EAEAX,gBACAb,KAAA2C,SACA3C,KAAAwB,SAAA,OACA,EAEAV,gBACAd,KAAA2C,SACA3C,KAAA4C,IAAA,QAAA,CACAxD,OAAA,EACAC,QAAA,uBAEAW,KAAAwB,SAAA,SACAxB,KAAAwB,SAAA,OACA,EAEAT,kBACAf,KAAA2C,SACA3C,KAAA4C,IAAA,QAAA,CACAxD,OAAA,EACAC,QAAA,qBAEAW,KAAAwB,SAAA,SACAxB,KAAAwB,SAAA,OACA,EAEAR,iBAAAwB,GACA,IAAAxD,EAAAwD,EAAAgB,QAAAhB,EAAAxD,SACAE,EAAAsD,EAAAiB,iBAAAC,KAAAC,KAAAnB,EAAAgB,OAAAhB,EAAAvD,MAAA,KAAA,EAEAe,KAAA4C,IAAA,WAAA,CACA5D,SAAAA,EACAC,MAAAuD,EAAAvD,MACAC,QAAAA,IAGAc,KAAAwB,SAAA,WAAA,CACAiC,iBAAAjB,EAAAiB,iBACAD,OAAAxE,EACAC,MAAAuD,EAAAvD,OAEA","file":"dmxDownload.js","sourcesContent":["dmx.Component('download', {\r\n\r\n  initialData: {\r\n    progress: {\r\n      position: 0,\r\n      total: 0,\r\n      percent: 0,\r\n    },\r\n\r\n    lastError: {\r\n      status: 0,\r\n      message: '',\r\n    },\r\n  },\r\n\r\n  attributes: {\r\n    timeout: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    url: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n\r\n    filename: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    abort () {\r\n      this._abort();\r\n    },\r\n\r\n    download (url) {\r\n      this._download(url);\r\n    },\r\n  },\r\n\r\n  events: {\r\n    done: Event,\r\n    error: Event,\r\n    start: Event,\r\n    progress: ProgressEvent,\r\n  },\r\n\r\n  init () {\r\n    this._loadHandler = this._loadHandler.bind(this);\r\n    this._abortHandler = this._abortHandler.bind(this);\r\n    this._errorHandler = this._errorHandler.bind(this);\r\n    this._timeoutHandler = this._timeoutHandler.bind(this);\r\n    this._progressHandler = this._progressHandler.bind(this);\r\n\r\n    this._xhr = new XMLHttpRequest();\r\n    this._xhr.addEventListener('load', this._loadHandler);\r\n    this._xhr.addEventListener('abort', this._abortHandler);\r\n    this._xhr.addEventListener('error', this._errorHandler);\r\n    this._xhr.addEventListener('timeout', this._timeoutHandler);\r\n    this._xhr.addEventListener('progress', this._progressHandler);\r\n  },\r\n\r\n  destroy () {\r\n    this._xhr.removeEventListener('load', this._loadHandler);\r\n    this._xhr.removeEventListener('abort', this._abortHandler);\r\n    this._xhr.removeEventListener('error', this._errorHandler);\r\n    this._xhr.removeEventListener('timeout', this._timeoutHandler);\r\n    this._xhr.removeEventListener('progress', this._progressHandler);\r\n    this._xhr = null;\r\n  },\r\n\r\n  _abort () {\r\n    this._xhr.abort();\r\n  },\r\n\r\n  _download (url) {\r\n    this._url = url || this.props.url;\r\n\r\n    this._xhr.abort();\r\n\r\n    this._trigger('start');\r\n\r\n    if (this._supportsCors(this._url)) {\r\n      this._xhr.open('GET', this._url);\r\n      this._xhr.responseType = 'blob';\r\n      this._xhr.send();\r\n    } else {\r\n      const a = document.createElement('a');\r\n      a.href = this._url;\r\n      a.download = this.props.filename || this._url.replace(/.*\\//, '').replace(/\\?.*/, '') || 'download';\r\n      a.rel = 'noopener';\r\n      a.target = '_blank';\r\n      a.dispatchEvent(new MouseEvent('click'));\r\n    }\r\n  },\r\n  \r\n  _supportsCors (url) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('HEAD', url, false);\r\n    try { xhr.send(); } catch (e) { }\r\n    return xhr.status >= 200 && xhr.status < 300;\r\n  },\r\n\r\n  _trigger (event, data) {\r\n    requestAnimationFrame(() => {\r\n      this.dispatchEvent(event, data);\r\n    });\r\n  },\r\n\r\n  _reset () {\r\n    this.set({\r\n      progress: {\r\n        position: 0,\r\n        total: 0,\r\n        percent: 0\r\n      },\r\n      error: {\r\n        status: 0,\r\n        message: '',\r\n        response: null\r\n      }\r\n    });\r\n  },\r\n\r\n  _getFilename () {\r\n    const header = this._xhr.getResponseHeader('Content-Disposition');\r\n    const match = header && header.match(/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/);\r\n    return this.props.filename || (match && match[1] ? match[1].replace(/['\"]/g, '') : false) || this._url.replace(/.*\\//, '').replace(/\\?.*/, '') || 'download';\r\n  },\r\n\r\n  _loadHandler () {\r\n    this._reset();\r\n    this._trigger('done');\r\n\r\n    if (this._xhr.status >= 200 && this._xhr.status < 300) {\r\n      var blob = this._xhr.response;\r\n      var a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = this._getFilename();\r\n      a.rel = 'noopener';\r\n\r\n      setTimeout(() => { URL.revokeObjectURL(a.href); }, 4E4);\r\n      setTimeout(() => { a.dispatchEvent(new MouseEvent('click')); }, 0);\r\n    } else {\r\n      this.set('error', {\r\n        status: this._xhr.status,\r\n        message: this._xhr.statusText\r\n      });\r\n      this._trigger('error');\r\n    }\r\n  },\r\n\r\n  _abortHandler () {\r\n    this._reset();\r\n    this._trigger('done');\r\n  },\r\n\r\n  _errorHandler () {\r\n    this._reset();\r\n    this.set('error', {\r\n      status: 0,\r\n      message: 'Failed to download'\r\n    });\r\n    this._trigger('error');\r\n    this._trigger('done');\r\n  },\r\n\r\n  _timeoutHandler () {\r\n    this._reset();\r\n    this.set('error', {\r\n      status: 0,\r\n      message: 'Download timeout'\r\n    });\r\n    this._trigger('error');\r\n    this._trigger('done');\r\n  },\r\n\r\n  _progressHandler (event) {\r\n    var position = event.loaded || event.position;\r\n    var percent = event.lengthComputable ? Math.ceil(event.loaded / event.total * 100) : 0;\r\n\r\n    this.set('progress', {\r\n      position: position,\r\n      total: event.total,\r\n      percent: percent\r\n    });\r\n\r\n    this._trigger('progress', {\r\n      lengthComputable: event.lengthComputable,\r\n      loaded: position,\r\n      total: event.total\r\n    });\r\n  },\r\n\r\n});"]}